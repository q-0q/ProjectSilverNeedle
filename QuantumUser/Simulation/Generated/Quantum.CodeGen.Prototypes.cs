// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AnimationData))]
  public unsafe partial class AnimationDataPrototype : ComponentPrototype<Quantum.AnimationData> {
    public Int32 frame;
    public Int32 path;
    partial void MaterializeUser(Frame frame, ref Quantum.AnimationData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AnimationData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AnimationData result, in PrototypeMaterializationContext context = default) {
        result.frame = this.frame;
        result.path = this.path;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AnimationEntityData))]
  public unsafe partial class AnimationEntityDataPrototype : ComponentPrototype<Quantum.AnimationEntityData> {
    public Int32 type;
    public Int32 framesAlive;
    public Int32 spriteId;
    public QBoolean flip;
    public FP angle;
    public Quantum.QEnum32<AELayer> layer;
    partial void MaterializeUser(Frame frame, ref Quantum.AnimationEntityData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AnimationEntityData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AnimationEntityData result, in PrototypeMaterializationContext context = default) {
        result.type = this.type;
        result.framesAlive = this.framesAlive;
        result.spriteId = this.spriteId;
        result.flip = this.flip;
        result.angle = this.angle;
        result.layer = this.layer;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CollisionBoxDatax))]
  public unsafe class CollisionBoxDataxPrototype : ComponentPrototype<Quantum.CollisionBoxDatax> {
    public MapEntityId source;
    public Int32 type;
    public Int32 subtype;
    public FP width;
    public FP height;
    public Int32 level;
    public Int32 bonusHitStun;
    public Int32 bonusBlockStun;
    public FP blockPushback;
    public FP hitPushback;
    public FP visualAngle;
    public FP trajectoryHeight;
    public FP trajectoryXVelocity;
    public FP gravityScaling;
    public FP damageScaling;
    public FP damage;
    public QBoolean launches;
    public QBoolean hardKnockdown;
    public QBoolean groundBounce;
    public QBoolean wallBounce;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CollisionBoxDatax component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CollisionBoxDatax result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.source, in context, out result.source);
        result.type = this.type;
        result.subtype = this.subtype;
        result.width = this.width;
        result.height = this.height;
        result.level = this.level;
        result.bonusHitStun = this.bonusHitStun;
        result.bonusBlockStun = this.bonusBlockStun;
        result.blockPushback = this.blockPushback;
        result.hitPushback = this.hitPushback;
        result.visualAngle = this.visualAngle;
        result.trajectoryHeight = this.trajectoryHeight;
        result.trajectoryXVelocity = this.trajectoryXVelocity;
        result.gravityScaling = this.gravityScaling;
        result.damageScaling = this.damageScaling;
        result.damage = this.damage;
        result.launches = this.launches;
        result.hardKnockdown = this.hardKnockdown;
        result.groundBounce = this.groundBounce;
        result.wallBounce = this.wallBounce;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ComboData))]
  public unsafe partial class ComboDataPrototype : ComponentPrototype<Quantum.ComboData> {
    public Int32 length;
    public FP gravityScaling;
    public FP damageScaling;
    partial void MaterializeUser(Frame frame, ref Quantum.ComboData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ComboData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ComboData result, in PrototypeMaterializationContext context = default) {
        result.length = this.length;
        result.gravityScaling = this.gravityScaling;
        result.damageScaling = this.damageScaling;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CpuControllerData))]
  public unsafe partial class CpuControllerDataPrototype : ComponentPrototype<Quantum.CpuControllerData> {
    public QBoolean cpuEnabled;
    public QBoolean forceCounter;
    public QBoolean doAction;
    public QBoolean doJump;
    public QBoolean block;
    public QBoolean dash;
    public Int32 inputType;
    public Int32 commandDirection;
    partial void MaterializeUser(Frame frame, ref Quantum.CpuControllerData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CpuControllerData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CpuControllerData result, in PrototypeMaterializationContext context = default) {
        result.cpuEnabled = this.cpuEnabled;
        result.forceCounter = this.forceCounter;
        result.doAction = this.doAction;
        result.doJump = this.doJump;
        result.block = this.block;
        result.dash = this.dash;
        result.inputType = this.inputType;
        result.commandDirection = this.commandDirection;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CutsceneData))]
  public unsafe class CutsceneDataPrototype : ComponentPrototype<Quantum.CutsceneData> {
    public MapEntityId initiator;
    public QBoolean initiatorFacingRight;
    public Int32 cutsceneIndex;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CutsceneData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CutsceneData result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.initiator, in context, out result.initiator);
        result.initiatorFacingRight = this.initiatorFacingRight;
        result.cutsceneIndex = this.cutsceneIndex;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.DramaticData))]
  public unsafe partial class DramaticDataPrototype : ComponentPrototype<Quantum.DramaticData> {
    public Int32 remaining;
    partial void MaterializeUser(Frame frame, ref Quantum.DramaticData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.DramaticData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.DramaticData result, in PrototypeMaterializationContext context = default) {
        result.remaining = this.remaining;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.FSMData))]
  public unsafe partial class FSMDataPrototype : ComponentPrototype<Quantum.FSMData> {
    public Int32 currentState;
    public Int32 framesInState;
    public FP virtualTimeInState;
    public Int32 currentCollisionState;
    public Int32 collisionFramesInState;
    public Int32 test;
    partial void MaterializeUser(Frame frame, ref Quantum.FSMData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.FSMData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.FSMData result, in PrototypeMaterializationContext context = default) {
        result.currentState = this.currentState;
        result.framesInState = this.framesInState;
        result.virtualTimeInState = this.virtualTimeInState;
        result.currentCollisionState = this.currentCollisionState;
        result.collisionFramesInState = this.collisionFramesInState;
        result.test = this.test;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.FrameMeterData))]
  public unsafe partial class FrameMeterDataPrototype : ComponentPrototype<Quantum.FrameMeterData> {
    [DynamicCollectionAttribute()]
    public Int32[] types = {};
    [DynamicCollectionAttribute()]
    public Int32[] frames = {};
    partial void MaterializeUser(Frame frame, ref Quantum.FrameMeterData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.FrameMeterData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.FrameMeterData result, in PrototypeMaterializationContext context = default) {
        if (this.types.Length == 0) {
          result.types = default;
        } else {
          var list = frame.AllocateList(out result.types, this.types.Length);
          for (int i = 0; i < this.types.Length; ++i) {
            Int32 tmp = default;
            tmp = this.types[i];
            list.Add(tmp);
          }
        }
        if (this.frames.Length == 0) {
          result.frames = default;
        } else {
          var list = frame.AllocateList(out result.frames, this.frames.Length);
          for (int i = 0; i < this.frames.Length; ++i) {
            Int32 tmp = default;
            tmp = this.frames[i];
            list.Add(tmp);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.GameFSMData))]
  public unsafe partial class GameFSMDataPrototype : ComponentPrototype<Quantum.GameFSMData> {
    public Int32 currentState;
    public Int32 framesInState;
    partial void MaterializeUser(Frame frame, ref Quantum.GameFSMData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.GameFSMData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.GameFSMData result, in PrototypeMaterializationContext context = default) {
        result.currentState = this.currentState;
        result.framesInState = this.framesInState;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.HealthData))]
  public unsafe partial class HealthDataPrototype : ComponentPrototype<Quantum.HealthData> {
    public FP health;
    partial void MaterializeUser(Frame frame, ref Quantum.HealthData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.HealthData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.HealthData result, in PrototypeMaterializationContext context = default) {
        result.health = this.health;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.HitEntitiesTracker))]
  public unsafe class HitEntitiesTrackerPrototype : ComponentPrototype<Quantum.HitEntitiesTracker> {
    [DynamicCollectionAttribute()]
    public MapEntityId[] HitEntities = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.HitEntitiesTracker component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.HitEntitiesTracker result, in PrototypeMaterializationContext context = default) {
        if (this.HitEntities.Length == 0) {
          result.HitEntities = default;
        } else {
          var list = frame.AllocateList(out result.HitEntities, this.HitEntities.Length);
          for (int i = 0; i < this.HitEntities.Length; ++i) {
            EntityRef tmp = default;
            PrototypeValidator.FindMapEntity(this.HitEntities[i], in context, out tmp);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.HitstopData))]
  public unsafe partial class HitstopDataPrototype : ComponentPrototype<Quantum.HitstopData> {
    public Int32 hitstopRemaining;
    public QBoolean queued;
    partial void MaterializeUser(Frame frame, ref Quantum.HitstopData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.HitstopData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.HitstopData result, in PrototypeMaterializationContext context = default) {
        result.hitstopRemaining = this.hitstopRemaining;
        result.queued = this.queued;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Input))]
  public unsafe partial class InputPrototype : StructPrototype {
    public Button P;
    public Button K;
    public Button S;
    public Button H;
    public Button D;
    public Button Jump;
    public Button Dash;
    public Button Backdash;
    public Int32 UnflippedNumpadDirection;
    partial void MaterializeUser(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context = default) {
        result.P = this.P;
        result.K = this.K;
        result.S = this.S;
        result.H = this.H;
        result.D = this.D;
        result.Jump = this.Jump;
        result.Dash = this.Dash;
        result.Backdash = this.Backdash;
        result.UnflippedNumpadDirection = this.UnflippedNumpadDirection;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.InputBuffer))]
  public unsafe partial class InputBufferPrototype : ComponentPrototype<Quantum.InputBuffer> {
    public Int32 length;
    public Int32 type;
    public Int32 direction;
    partial void MaterializeUser(Frame frame, ref Quantum.InputBuffer result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.InputBuffer component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.InputBuffer result, in PrototypeMaterializationContext context = default) {
        result.length = this.length;
        result.type = this.type;
        result.direction = this.direction;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.InteractionControllerData))]
  public unsafe partial class InteractionControllerDataPrototype : ComponentPrototype<Quantum.InteractionControllerData> {
    public Int32 player0InputType;
    public Int32 player0CommandDirection;
    public Int32 player0Frame;
    public Int32 player1InputType;
    public Int32 player1CommandDirection;
    public Int32 player1Frame;
    public QBoolean enabled;
    partial void MaterializeUser(Frame frame, ref Quantum.InteractionControllerData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.InteractionControllerData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.InteractionControllerData result, in PrototypeMaterializationContext context = default) {
        result.player0InputType = this.player0InputType;
        result.player0CommandDirection = this.player0CommandDirection;
        result.player0Frame = this.player0Frame;
        result.player1InputType = this.player1InputType;
        result.player1CommandDirection = this.player1CommandDirection;
        result.player1Frame = this.player1Frame;
        result.enabled = this.enabled;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KinematicsData))]
  public unsafe partial class KinematicsDataPrototype : ComponentPrototype<Quantum.KinematicsData> {
    public FPVector2 attachPosition;
    partial void MaterializeUser(Frame frame, ref Quantum.KinematicsData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.KinematicsData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.KinematicsData result, in PrototypeMaterializationContext context = default) {
        result.attachPosition = this.attachPosition;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MomentumData))]
  public unsafe partial class MomentumDataPrototype : ComponentPrototype<Quantum.MomentumData> {
    public FP virtualTimeInMomentum;
    public Int32 framesInMomentum;
    public FP momentumAmount;
    partial void MaterializeUser(Frame frame, ref Quantum.MomentumData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.MomentumData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.MomentumData result, in PrototypeMaterializationContext context = default) {
        result.virtualTimeInMomentum = this.virtualTimeInMomentum;
        result.framesInMomentum = this.framesInMomentum;
        result.momentumAmount = this.momentumAmount;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerDirection))]
  public unsafe partial class PlayerDirectionPrototype : ComponentPrototype<Quantum.PlayerDirection> {
    public QBoolean FacingRight;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerDirection result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerDirection component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerDirection result, in PrototypeMaterializationContext context = default) {
        result.FacingRight = this.FacingRight;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerLink))]
  public unsafe partial class PlayerLinkPrototype : ComponentPrototype<Quantum.PlayerLink> {
    public PlayerRef Player;
    public Int32 characterId;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context = default) {
        result.Player = this.Player;
        result.characterId = this.characterId;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PushbackData))]
  public unsafe partial class PushbackDataPrototype : ComponentPrototype<Quantum.PushbackData> {
    public FP virtualTimeInPushback;
    public Int32 framesInPushback;
    public FP pushbackAmount;
    partial void MaterializeUser(Frame frame, ref Quantum.PushbackData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PushbackData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PushbackData result, in PrototypeMaterializationContext context = default) {
        result.virtualTimeInPushback = this.virtualTimeInPushback;
        result.framesInPushback = this.framesInPushback;
        result.pushbackAmount = this.pushbackAmount;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ScoreData))]
  public unsafe partial class ScoreDataPrototype : ComponentPrototype<Quantum.ScoreData> {
    public Int32 score;
    partial void MaterializeUser(Frame frame, ref Quantum.ScoreData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ScoreData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ScoreData result, in PrototypeMaterializationContext context = default) {
        result.score = this.score;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SlowdownData))]
  public unsafe partial class SlowdownDataPrototype : ComponentPrototype<Quantum.SlowdownData> {
    public Int32 slowdownRemaining;
    public FP multiplier;
    partial void MaterializeUser(Frame frame, ref Quantum.SlowdownData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SlowdownData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SlowdownData result, in PrototypeMaterializationContext context = default) {
        result.slowdownRemaining = this.slowdownRemaining;
        result.multiplier = this.multiplier;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.StunData))]
  public unsafe partial class StunDataPrototype : ComponentPrototype<Quantum.StunData> {
    public Int32 stun;
    partial void MaterializeUser(Frame frame, ref Quantum.StunData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.StunData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.StunData result, in PrototypeMaterializationContext context = default) {
        result.stun = this.stun;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SummonData))]
  public unsafe class SummonDataPrototype : ComponentPrototype<Quantum.SummonData> {
    public MapEntityId owner;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SummonData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SummonData result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.owner, in context, out result.owner);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TrajectoryData))]
  public unsafe partial class TrajectoryDataPrototype : ComponentPrototype<Quantum.TrajectoryData> {
    public Int32 jumpsRemaining;
    public Int32 framesInTrajectory;
    public FP virtualTimeInTrajectory;
    public FP xVelocity;
    public FP startingTrajectoryHeight;
    public FP trajectoryHeight;
    public Int32 timeToTrajectoryHeight;
    public FP fallSpeed;
    public Int32 timeToFallSpeed;
    public QBoolean hardKnockdown;
    public QBoolean groundBounce;
    public QBoolean wallBounce;
    public Quantum.QEnum32<TrajectoryDashType> dashType;
    partial void MaterializeUser(Frame frame, ref Quantum.TrajectoryData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TrajectoryData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TrajectoryData result, in PrototypeMaterializationContext context = default) {
        result.jumpsRemaining = this.jumpsRemaining;
        result.framesInTrajectory = this.framesInTrajectory;
        result.virtualTimeInTrajectory = this.virtualTimeInTrajectory;
        result.xVelocity = this.xVelocity;
        result.startingTrajectoryHeight = this.startingTrajectoryHeight;
        result.trajectoryHeight = this.trajectoryHeight;
        result.timeToTrajectoryHeight = this.timeToTrajectoryHeight;
        result.fallSpeed = this.fallSpeed;
        result.timeToFallSpeed = this.timeToFallSpeed;
        result.hardKnockdown = this.hardKnockdown;
        result.groundBounce = this.groundBounce;
        result.wallBounce = this.wallBounce;
        result.dashType = this.dashType;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.WhiffData))]
  public unsafe partial class WhiffDataPrototype : ComponentPrototype<Quantum.WhiffData> {
    public QBoolean whiffed;
    partial void MaterializeUser(Frame frame, ref Quantum.WhiffData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.WhiffData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.WhiffData result, in PrototypeMaterializationContext context = default) {
        result.whiffed = this.whiffed;
        MaterializeUser(frame, ref result, in context);
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
